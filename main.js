!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:a,_id:o,handleDeleteClick:l,isLiked:d,handleLikeCard:c}=e;this._name=n,this._link=a,this._id=o,this._handleDeleteClick=l,this._handleLikeCard=c,this._cardSelector=t,this._handleImageClick=s,this._api=i,this._isLiked=d,this._confirmationModal=r}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._confirmationModal.open(this._cardElement,this._id)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._handleLikeCard(this._id,this._isLiked).then((()=>{this._isLiked=!this._isLiked,this._likeButton.classList.toggle("card__like-button_active")})).catch((e=>{console.error(e)}))}_handleDeleteCard(){this._cardElement.remove()}_getTemplate(){return this._cardSelector.content.querySelector(".card__list-item").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardNameEl=this._cardElement.querySelector(".card__description-text"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardNameEl.textContent=this._name,this._isLiked&&this._likeButton.classList.add("card__like-button_active"),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls=[...this._form.querySelectorAll(this._inputSelector)]}_toggleInputError(e){const t=this._form.querySelector(`#${e.id}-error`),s=e.validity.valid;e.classList.toggle(this._inputErrorClass,!s),t.classList.toggle(this._errorClass,!s),t.textContent=s?"":e.validationMessage}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){const e=this._hasInvalidInput();this._submitButton.classList.toggle(this._inactiveButtonClass,e),this._submitButton.disabled=e}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState()}}class s{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),this._modalElement.addEventListener("click",this._handleOverlayClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),this._modalElement.removeEventListener("click",this._handleOverlayClose)}_handleOverlayClose(e){e.target.classList.contains("modal")&&this.close()}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._modalElement.querySelectorAll(".modal__close").forEach((e=>{e.addEventListener("click",(()=>this.close()))}))}}var i=class extends s{constructor(e,t){super({modalSelector:e}),this._submitButton=this._modalElement.querySelector(".modal__submit"),this._formModal=this._modalElement.querySelector(".modal__form"),this._inputs=this._formModal.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._handleSavingModifier=()=>{this._submitButton.classList.add("modal__submit_saving")}}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._formModal.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._handleSavingModifier()}))}resetSavingModifier(){this._submitButton.classList.remove("modal__submit_saving")}close(){super.close(),this._formModal.reset()}};const r=document.querySelector("#profile-edit-button"),n=document.querySelector(".profile__name"),a=document.querySelector(".profile__description"),o=document.querySelector("#profile-name-input"),l=document.querySelector("#profile-description-input"),d=document.querySelector("#card-template"),c=document.querySelector(".card__list"),h=document.querySelector("#add-card-button"),_=document.querySelector("#avatar-update-button"),u=document.querySelector(".profile__picture"),m={};var p;p={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(p.formSelector)).forEach((e=>{const s=new t(p,e),i=e.id;m[i]=s,s.enableValidation()}));const v=new i("#profile-edit-modal",(function(e){const{name:t,about:s}=e;L.updateProfile({name:t,about:s}).then((e=>{b.setUserInfo(e.name,e.about),v.close()})).catch((e=>{console.error(e)})).finally((()=>{v.resetSavingModifier()}))})),E=new i("#add-card-modal",(function(e){const{name:t,link:s}=e;L.addItem({name:t,link:s}).then((e=>{g.addItem(e),E.close()})).catch((e=>{console.error(e)})).finally((()=>{E.resetSavingModifier()}))})),f=new class extends s{constructor(e){super({modalSelector:e})}open(e){let{link:t,name:s}=e;this._modalElement.querySelector(".modal__preview-caption").textContent=s;const i=this._modalElement.querySelector(".modal__preview-image");i.src=t,i.alt=`${s}`,super.open()}}("#preview-image-modal"),k=new i("#avatar-modal",(function(e){const{avatar:t}=e;L.updateAvatar({avatar:t}).then((e=>{b.setUserAvatar(e.avatar),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.resetSavingModifier()}))})),S=new class extends s{constructor(e,t){super({modalSelector:e}),this._handleSubmit=t,this._submitButton=this._modalElement.querySelector(".modal__submit")}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("click",(e=>{e.preventDefault(),this._handleSubmit(this._cardElement,this._cardId)}))}open(e,t){this._cardElement=e,this._cardId=t,super.open()}}("#confirmation-modal",y);v.setEventListeners(),E.setEventListeners(),f.setEventListeners(),S.setEventListeners(),k.setEventListeners();const b=new class{constructor(e,t,s){this._name=e,this._description=t,this._avatar=s}getUserInfo(){const e={};return e.profileName=this._name.textContent,e.profileDescription=this._description.textContent,e}setUserInfo(e,t){this._name.textContent=e,this._description.textContent=t}setUserAvatar(e){this._avatar.src=e}}(n,a,u),g=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=t}renderItems(e){e.forEach((e=>{this._renderer(e,this._container)}))}addItem(e){this._renderer(e,this._container)}}({items:[],renderer:function(t,s){const i=function(t){return new e({...t,handleDeleteClick:y,handleLikeCard:I},d,C,L,S).getView()}(t);s.prepend(i)}},c),L=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`).catch((e=>{console.error(e)}))}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._checkResponse)}updateProfile(e){let{name:t,about:s}=e;return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}addItem(e){let{name:t,link:s}=e;return fetch(`${this.baseUrl}/cards`,{headers:this.headers,method:"POST",body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"68ee5cc1-9a6e-42ad-87e2-f7856d8c88ba","Content-Type":"application/json"}});function C(e){f.open({link:e.link,name:e.name,id:e.id})}function y(e,t){L.deleteCard(t).then((()=>{e.remove(),S.close()})).catch((e=>console.error(e)))}function I(e,t){return t?L.unlikeCard(e):L.likeCard(e)}L.getAppInfo().then((e=>{let[t,s]=e;b.setUserInfo(t.name,t.about),b.setUserAvatar(t.avatar),g.renderItems(s)})).catch((e=>{console.error(e)})),r.addEventListener("click",(()=>{m["edit-profile-form"].resetValidation();const{profileName:e,profileDescription:t}=b.getUserInfo();o.value=e,l.value=t,v.open()})),h.addEventListener("click",(()=>{m["add-card-form"].resetValidation(),E.open()})),_.addEventListener("click",(()=>{m["avatar-form"].resetValidation(),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,